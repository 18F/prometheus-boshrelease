---
meta:
  name:    prometheus
  target:  sw
  url:     https://ci.starkandwayne.com

  initial_version: 1.1.0

  manifest:
    operator_file_paths: "manifests/operators/dev/test_alerts.yml,manifests/operators/dev/test_dashboards.yml"

  bosh-lite:
    target: https://10.58.111.49:25555
    username: (( vault "secret/bosh-lites/lite49/users/admin:username" ))
    password: (( vault "secret/bosh-lites/lite49/users/admin:password" ))
    cacert:   (( vault "secret/bosh-lites/lite49/certs:rootCA.pem" ))

  aws:
    bucket: prometheus-boshrelease
    access_key: (( vault "secret/aws/cfcommunity:access" ))
    secret_key: (( vault "secret/aws/cfcommunity:secret" ))

  github:
    owner:  cloudfoundry-community
    repo:   (( concat meta.name "-boshrelease" ))
    branch: master
    private_key:  (( vault "secret/pipelines/shared/github:private_key" ))
    access_token: (( vault "secret/pipelines/shared/github:access_token" ))

  slack:
    webhook:       (( vault "secret/pipelines/prometheus-boshrelease/slack:webhook" ))
    channel:       '#prometheus'
    username:      starkandwayne-ci
    icon:          https://cl.ly/0o401h3l1x3R/logo-50x50.png
    blob_update:  '(( concat "<" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME?groups=blobs| Update blob?>" ))'
    blob_release: '(( concat "<" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME?groups=blobs| Cut a new release?>" ))'
    blob_failure: '(( concat "$BUILD_PIPELINE_NAME: :airplane_arriving: <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| Failed to update blob at $BUILD_JOB_NAME>" ))'

groups:
  - name: blobs
    jobs:
      - prometheus
      - update_prometheus
      - alertmanager
      - update_alertmanager
      - pushgateway
      - update_pushgateway
      - blackbox_exporter
      - update_blackbox_exporter
      - collectd_exporter
      - update_collectd_exporter
      - consul_exporter
      - update_consul_exporter
      - haproxy_exporter
      - update_haproxy_exporter
      - statsd_exporter
      - update_statsd_exporter

jobs:
  - name: prometheus
    public: true
    serial: true
    plan:
      - aggregate:
        - get: prometheus
          trigger: true
          params:
            globs:
              - prometheus-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of prometheus was detected. " meta.slack.blob_update ))'
          text_file: prometheus/version

  - name: update_prometheus
    public: true
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: prometheus
          trigger: false
          passed:
            - prometheus
          params:
            globs:
              - prometheus-*.linux-amd64.tar.gz
      - task: update_prometheus
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: prometheus
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         prometheus
            BLOB_NAME:        prometheus
            BLOB_BINARY:      prometheus*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/prometheus
            BLOB_CLEANUP:     prometheus/prometheus.*
            BLOB_DESTINATION: prometheus/prometheus-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of prometheus was updated in master. " meta.slack.blob_release ))'
            text_file: prometheus/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: alertmanager
    public: true
    serial: true
    plan:
      - aggregate:
        - get: alertmanager
          trigger: true
          params:
            globs:
              - alertmanager-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of alertmanager was detected. " meta.slack.blob_update ))'
          text_file: alertmanager/version

  - name: update_alertmanager
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: alertmanager
          trigger: false
          passed:
            - alertmanager
          params:
            globs:
              - alertmanager-*.linux-amd64.tar.gz
      - task: update_alertmanager
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: alertmanager
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         alertmanager
            BLOB_NAME:        alertmanager
            BLOB_BINARY:      alertmanager*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/alertmanager
            BLOB_CLEANUP:     alertmanager/alertmanager.*
            BLOB_DESTINATION: alertmanager/alertmanager-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of alertmanager was updated in master. " meta.slack.blob_release ))'
            text_file: alertmanager/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: pushgateway
    public: true
    serial: true
    plan:
      - aggregate:
        - get: pushgateway
          trigger: true
          params:
            globs:
              - pushgateway-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of pushgateway was detected. " meta.slack.blob_update ))'
          text_file: pushgateway/version

  - name: update_pushgateway
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: pushgateway
          trigger: false
          passed:
            - pushgateway
          params:
            globs:
              - pushgateway-*.linux-amd64.tar.gz
      - task: update_pushgateway
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: pushgateway
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         pushgateway
            BLOB_NAME:        pushgateway
            BLOB_BINARY:      pushgateway*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/pushgateway
            BLOB_CLEANUP:     pushgateway/pushgateway.*
            BLOB_DESTINATION: pushgateway/pushgateway-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of pushgateway was updated in master. " meta.slack.blob_release ))'
            text_file: pushgateway/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: blackbox_exporter
    public: true
    serial: true
    plan:
      - aggregate:
        - get: blackbox_exporter
          trigger: true
          params:
            globs:
              - blackbox_exporter-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of blackbox_exporter was detected. " meta.slack.blob_update ))'
          text_file: blackbox_exporter/version

  - name: update_blackbox_exporter
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: blackbox_exporter
          trigger: false
          passed:
            - blackbox_exporter
          params:
            globs:
              - blackbox_exporter-*.linux-amd64.tar.gz
      - task: update_blackbox_exporter
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: blackbox_exporter
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         blackbox_exporter
            BLOB_NAME:        blackbox_exporter
            BLOB_BINARY:      blackbox_exporter*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/blackbox_exporter
            BLOB_CLEANUP:     blackbox_exporter/blackbox_exporter.*
            BLOB_DESTINATION: blackbox_exporter/blackbox_exporter-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of blackbox_exporter was updated in master. " meta.slack.blob_release ))'
            text_file: blackbox_exporter/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: collectd_exporter
    public: true
    serial: true
    plan:
      - aggregate:
        - get: collectd_exporter
          trigger: true
          params:
            globs:
              - collectd_exporter-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of collectd_exporter was detected. " meta.slack.blob_update ))'
          text_file: collectd_exporter/version

  - name: update_collectd_exporter
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: collectd_exporter
          trigger: false
          passed:
            - collectd_exporter
          params:
            globs:
              - collectd_exporter-*.linux-amd64.tar.gz
      - task: update_collectd_exporter
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: collectd_exporter
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         collectd_exporter
            BLOB_NAME:        collectd_exporter
            BLOB_BINARY:      collectd_exporter*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/collectd_exporter
            BLOB_CLEANUP:     collectd_exporter/collectd_exporter.*
            BLOB_DESTINATION: collectd_exporter/collectd_exporter-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of collectd_exporter was updated in master. " meta.slack.blob_release ))'
            text_file: collectd_exporter/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: consul_exporter
    public: true
    serial: true
    plan:
      - aggregate:
        - get: consul_exporter
          trigger: true
          params:
            globs:
              - consul_exporter-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of consul_exporter was detected. " meta.slack.blob_update ))'
          text_file: consul_exporter/version

  - name: update_consul_exporter
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: consul_exporter
          trigger: false
          passed:
            - consul_exporter
          params:
            globs:
              - consul_exporter-*.linux-amd64.tar.gz
      - task: update_consul_exporter
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: consul_exporter
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         consul_exporter
            BLOB_NAME:        consul_exporter
            BLOB_BINARY:      consul_exporter*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/consul_exporter
            BLOB_CLEANUP:     consul_exporter/consul_exporter.*
            BLOB_DESTINATION: consul_exporter/consul_exporter-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of consul_exporter was updated in master. " meta.slack.blob_release ))'
            text_file: consul_exporter/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: haproxy_exporter
    public: true
    serial: true
    plan:
      - aggregate:
        - get: haproxy_exporter
          trigger: true
          params:
            globs:
              - haproxy_exporter-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of haproxy_exporter was detected. " meta.slack.blob_update ))'
          text_file: haproxy_exporter/version

  - name: update_haproxy_exporter
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: haproxy_exporter
          trigger: false
          passed:
            - haproxy_exporter
          params:
            globs:
              - haproxy_exporter-*.linux-amd64.tar.gz
      - task: update_haproxy_exporter
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: haproxy_exporter
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         haproxy_exporter
            BLOB_NAME:        haproxy_exporter
            BLOB_BINARY:      haproxy_exporter*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/haproxy_exporter
            BLOB_CLEANUP:     haproxy_exporter/haproxy_exporter.*
            BLOB_DESTINATION: haproxy_exporter/haproxy_exporter-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of haproxy_exporter was updated in master. " meta.slack.blob_release ))'
            text_file: haproxy_exporter/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

  - name: statsd_exporter
    public: true
    serial: true
    plan:
      - aggregate:
        - get: statsd_exporter
          trigger: true
          params:
            globs:
              - statsd_exporter-*.linux-amd64.tar.gz
      - put: notify
        params:
          channel:   (( grab meta.slack.channel ))
          username:  (( grab meta.slack.username ))
          icon_url:  (( grab meta.slack.icon ))
          text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of statsd_exporter was detected. " meta.slack.blob_update ))'
          text_file: statsd_exporter/version

  - name: update_statsd_exporter
    serial: true
    plan:
      - aggregate:
        - get: git
        - get: statsd_exporter
          trigger: false
          passed:
            - statsd_exporter
          params:
            globs:
              - statsd_exporterr-*.linux-amd64.tar.gz
      - task: update_statsd_exporter
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: statsd_exporter
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:        git
            REPO_OUT:         pushme
            BLOB_DIR:         statsd_exporter
            BLOB_NAME:        statsd_exporter
            BLOB_BINARY:      statsd_exporter*.linux-amd64.tar.gz
            BLOB_URL:         https://github.com/prometheus/statsd_exporter
            BLOB_CLEANUP:     statsd_exporter/statsd_exporter.*
            BLOB_DESTINATION: statsd_exporter/statsd_exporter-${VERSION}.linux-amd64.tar.gz
            AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
            BRANCH:           (( grab meta.github.branch ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      '(( concat "$BUILD_PIPELINE_NAME: New version $TEXT_FILE_CONTENT of statsd_exporter was updated in master. " meta.slack.blob_release ))'
            text_file: statsd_exporter/version
    on_failure:
      do:
        - put: notify
          params:
            channel:   (( grab meta.slack.channel ))
            username:  (( grab meta.slack.username ))
            icon_url:  (( grab meta.slack.icon ))
            text:      (( grab meta.slack.blob_failure ))

resources:
  - name: prometheus
    type: github-release
    source:
      user:         prometheus
      repository:   prometheus
      access_token: (( grab meta.github.access_token ))
  - name: alertmanager
    type: github-release
    source:
      user:         prometheus
      repository:   alertmanager
      access_token: (( grab meta.github.access_token ))
  - name: pushgateway
    type: github-release
    source:
      user:         prometheus
      repository:   pushgateway
      access_token: (( grab meta.github.access_token ))
  - name: blackbox_exporter
    type: github-release
    source:
      user:         prometheus
      repository:   blackbox_exporter
      access_token: (( grab meta.github.access_token ))
  - name: collectd_exporter
    type: github-release
    source:
      user:         prometheus
      repository:   collectd_exporter
      access_token: (( grab meta.github.access_token ))
  - name: consul_exporter
    type: github-release
    source:
      user:         prometheus
      repository:   consul_exporter
      access_token: (( grab meta.github.access_token ))
  - name: haproxy_exporter
    type: github-release
    source:
      user:         prometheus
      repository:   haproxy_exporter
      access_token: (( grab meta.github.access_token ))
  - name: statsd_exporter
    type: github-release
    source:
      user:         prometheus
      repository:   statsd_exporter
      access_token: (( grab meta.github.access_token ))
