ALERT KubernetesNodeMemoryRequests
  IF sum(kube_pod_container_resource_requests_memory_bytes) by (node) / on (node) kube_node_status_capacity_memory_bytes > <%= p('kubernetes_alerts.node_memory_requests.threshold') %>
  FOR <%= p('kubernetes_alerts.node_memory_requests.evaluation_time') %>
  LABELS {
    service = "kubernetes",
    severity = "warning",
  }
  ANNOTATIONS {
    summary = "Kubernetes node `{{$labels.node}}` memory requests too high: {{$value}}",
    description = "Kubernetes node `{{$labels.node}}` reserved over <%= p('kubernetes_alerts.node_memory_requests.threshold') %)> of memory for <%= p('kubernetes_alerts.node_memory_requests.evaluation_time') %>",
  }

ALERT KubernetesNodeCPURequests
  IF sum(kube_pod_container_resource_requests_cpu_cores) by (node) / on (node) kube_node_status_capacity_cpu_cores > <%= p('kubernetes_alerts.node_cpu_requests.threshold') %>
  FOR <%= p('kubernetes_alerts.node_cpu_requests.evaluation_time') %>
  LABELS {
    service = "kubernetes",
    severity = "warning",
  }
  ANNOTATIONS {
    summary = "Kubernetes node `{{$labels.node}}` CPU requests too high: {{$value}}",
    description = "Kubernetes node `{{$labels.node}}` reserved over <%= p('kubernetes_alerts.node_cpu_requests.threshold') %> of CPU cores for <%= p('kubernetes_alerts.node_cpu_requests.evaluation_time') %>",
  }
