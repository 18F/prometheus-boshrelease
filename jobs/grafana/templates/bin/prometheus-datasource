#!/bin/bash

set -eu

<% if_link('prometheus') do |prometheus| %>
GRAFANA_DATASOURCES_API="<%= p('grafana.server.protocol', 'http') %>://<%= spec.ip %>:<%= p('grafana.server.http_port') %>/api/datasources"
GRAFANA_CREDENTIALS="<%= p('grafana.security.admin_user') %>:<%= p('grafana.security.admin_password') %>"

<%
  # Try to pick the prometheus instance deployed at the same az
  pinstances = prometheus.instances.select { |instance| instance.az == spec.az }
  prometheus_ip = pinstances.empty? ? prometheus.instances.first.address : pinstances.first.address

  purl = "http://#{prometheus_ip}:#{prometheus.p('prometheus.web.port')}"
  pbasic_auth = "false"
  pbasic_auth_user = ""
  pbasic_auth_password = ""

  # If prometheus is using an external url, use it instead of the prometheus instance private ip addresses
  if p('grafana.prometheus.use_external_url') then
    prometheus.if_p('prometheus.web.external_url') do |prometheus_external_url|
      purl = prometheus_external_url
      if_link('nginx') do |nginx|
        # If prometheus is secured by basic auth, set the credentials
        nginx.if_p('nginx.prometheus.auth_users') do |prometheus_auth_users|
          if prometheus_auth_users.any?
            pbasic_auth = "true"
            pbasic_auth_user = prometheus_auth_users[0]['name']
            pbasic_auth_password = prometheus_auth_users[0]['password']
          end
        end
      end
    end
  end
%>
PROMETHEUS_URL="<%= purl %>"
PROMETHEUS_BASIC_AUTH="<%= pbasic_auth %>"
PROMETHEUS_BASIC_AUTH_USER="<%= pbasic_auth_user %>"
PROMETHEUS_BASIC_AUTH_PASSWORD="<%= pbasic_auth_password %>"

DATASOURCE_NAME="<%= p('grafana.prometheus.datasource_name') %>"
DATASOURCE_DATA="{\"name\":\"${DATASOURCE_NAME}\",\"type\":\"prometheus\",\"access\":\"proxy\",\"url\":\"${PROMETHEUS_URL}\",\"password\":\"\",\"user\":\"\",\"database\":\"\",\"basicAuth\":${PROMETHEUS_BASIC_AUTH},\"basicAuthUser\":\"${PROMETHEUS_BASIC_AUTH_USER}\",\"basicAuthPassword\":\"${PROMETHEUS_BASIC_AUTH_PASSWORD}\",\"isDefault\":true,\"jsonData\":null}"

DATASOURCE_ID=$(curl -u ${GRAFANA_CREDENTIALS} -ks ${GRAFANA_DATASOURCES_API} | sed -n 's/^.*"id":\([0-9]*\)[^}]*"name":"'${DATASOURCE_NAME}'".*$/\1/p' )

if [ -n "${DATASOURCE_ID}" ]; then
  if curl -u ${GRAFANA_CREDENTIALS} -ksf -X PUT ${GRAFANA_DATASOURCES_API}/${DATASOURCE_ID} -H 'Content-Type: application/json' -d "${DATASOURCE_DATA}" ; then
    echo -e "\nUpdated datasource ${DATASOURCE_NAME} at $(date)"
  else
    echo -e "\nFailed to update datasource ${DATASOURCE_NAME} at $(date)"
    exit 1
  fi
else
  if curl -u ${GRAFANA_CREDENTIALS} -ksf -X POST ${GRAFANA_DATASOURCES_API} -H 'Content-Type: application/json' -d "${DATASOURCE_DATA}" ; then
    echo -e "\nCreated datasource ${DATASOURCE_NAME} at $(date)"
  else
    echo -e "\nFailed to create datasource ${DATASOURCE_NAME} at $(date)"
    exit 1
  fi
fi

<% end %>

exit 0
